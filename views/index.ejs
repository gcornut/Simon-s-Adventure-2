<!DOCTYPE HTML>
<html manifest="site.manifest">
	<head>
		<title>Simon's Adventure</title>
		<meta id="viewport" name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
		<meta name="apple-mobile-web-app-capable" content="yes">
		<meta name="apple-mobile-web-app-status-bar-style" content="black">
		<style type="text/css">
			body {
				background-color: #000;
				color: #fff;
			
				/* Allow mouse dragging. */
				-moz-user-select: none;
				-ms-user-select: none;
				-o-user-select: none;
				-webkit-user-select: none;
				user-select: none;
				
				/* disable touch panning/zooming */
				-ms-touch-action: none;
				touch-action: none;
			
				/* Allow canvas to hit the edges of the browser viewport. */
				margin: 0;
			}
			
			#screen canvas {
				margin: auto;
			
				/* Hide the gap for font descenders. */
				display: block;
				
				/* disable scaling interpolation */
				image-rendering: optimizeSpeed;
				image-rendering: -moz-crisp-edges;
				image-rendering: -o-crisp-edges;
				image-rendering: -webkit-optimize-contrast;
				image-rendering: optimize-contrast;
				-ms-interpolation-mode: nearest-neighbor;
			}
		</style>
	</head>
	<body>
		<!-- Canvas placeholder -->
		<div id="screen"></div>
		
		<!--<script src="/socket.io/socket.io.js"></script>-->
		<script>
			var remote = {};
			var WebSocketClient = window.WebSocket || window.MozWebSocket;
			
			var connection;
			if(WebSocketClient) {
				connection = new WebSocketClient(location.origin.replace(/^http/, 'ws'), 'echo-protocol');
				
				connection.onopen = function() {
					connection.sendJSON = function(object, type) {
						if(type != undefined) {
							object.type = type;
						}
						connection.send(JSON.stringify(object));
					}
					
					//Stuff to do on connection
					var friend = prompt("Friend?");
					connection.sendJSON({
						type: 'set friend',
						FID: friend
					});
					
				};
				connection.onerror; //Stuff to do when error occurs
				
				connection.onmessage = function(message) {
					var json;
					
					try {
						json = JSON.parse(message.data);	
					}
					catch(e) {
						//Error parsing message data
					}
					
					if(json) {
						if(json.type === 'confirm connect') {
							console.log('Connected to server with id: '+json.id);
						}
						else if(json.type === 'warn') {
							console.log("[WARN] "+json.msg);
						}
						else if(json.type === 'confirm friend') {
							console.log("Friend request state: "+json.ok);
						}
						else if(json.type === 'action') {
							remote = json;
						}
					}
				}
				
				
			}
			else {
				//TODO: Warn the user that his navigator is not compatible
			}
		</script>
		<script type="text/javascript" src="/js/simonsadventure.js"></script>
		
		<!-- Bootstrap & Mobile optimization tricks -->
		<script type="text/javascript">
			window.onReady(function onReady() {
				game.onload();

				// Mobile browser hacks
				if (me.sys.isMobile && !navigator.isCocoonJS) {
					// Prevent the webview from moving on a swipe
					window.document.addEventListener("touchmove", function (e) {
						e.preventDefault();
						window.scroll(0, 0);
						return false;
					}, false);

					// Scroll away mobile GUI
					(function () {
						window.scrollTo(0, 1);
						me.video.onresize(null);
					}).defer();

					me.event.subscribe(me.event.WINDOW_ONRESIZE, function (e) {
						window.scrollTo(0, 1);
					})

					// Retina viewport settings
					if (window.devicePixelRatio > 1) {
						document.getElementById("viewport").setAttribute(
							"content",
							"width=device-width, initial-scale=0.5, maximum-scale=0.5, user-scalable=0"
						);
					}
				}
			});
		</script>
	</body>
</html>
